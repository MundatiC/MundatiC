name: Generate Snake Animation
on:
  schedule:
    - cron: "0 */12 * * *"  # Runs every 12 hours
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  generate-snake:
    name: Generate and Update Snake Animation
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Necessary to push to the repository
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history

      - name: Generate Snake
        uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
          show_private: true
          svg_out_path: dist/github-contribution-grid-snake.svg
          gif_out_path: dist/github-contribution-grid-snake.gif

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare Output Branch
        run: |
          # Check if output branch exists
          if git ls-remote --exit-code --heads origin output; then
            git fetch origin output
            git checkout output
            git rm -rf . || echo "No files to remove"
          else
            git checkout --orphan output
            git rm -rf . || echo "No files to remove"
            git commit --allow-empty -m "Initial commit"
          fi

      - name: Commit and Push
        run: |
          # Copy new files
          mkdir -p dist
          cp dist/github-contribution-grid-snake.svg .
          cp dist/github-contribution-grid-snake.gif .
          
          # Add and commit
          git add .
          git commit -m "Update snake animation - $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}