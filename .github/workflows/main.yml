name: Generate Snake Animation
on:
  schedule:
    - cron: "0 */12 * * *"  # Runs every 12 hours
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  generate-snake:
    name: Generate and Update Snake Animation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      # Add this if you want to include private contributions
      # (note: may require organization owner approval)
      # organization-projects: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # First generate full snake (needed as input for filtering)
      - name: Generate Full Snake
        uses: Platane/snk@master
        id: full-snake
        with:
          github_user_name: ${{ github.repository_owner }}
          svg_out_path: dist/full-snake.svg
          gif_out_path: dist/full-snake.gif

      # Filter to show only 2024 contributions
      - name: Filter 2024 Contributions
        run: |
          # Install required packages
          sudo apt-get install -y xmlstarlet
          
          # Process SVG
          xmlstarlet ed \
            -u "//svg:rect[contains(@data-date, '2023') or contains(@data-date, '2022') or contains(@data-date, '2021') or contains(@data-date, '2020')]/@fill" \
            -v "#ebedf0" \
            dist/full-snake.svg > dist/github-contribution-grid-snake.svg
          
          # Copy GIF (can't filter, so we'll use SVG primarily)
          cp dist/full-snake.gif dist/github-contribution-grid-snake.gif

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare Output Branch
        run: |
          if git ls-remote --exit-code --heads origin output; then
            git fetch origin output
            git checkout output
            git rm -rf . || echo "No files to remove"
          else
            git checkout --orphan output
            git rm -rf . || echo "No files to remove"
            git commit --allow-empty -m "Initial commit"
          fi

      - name: Commit and Push
        run: |
          mkdir -p dist
          cp dist/github-contribution-grid-snake.svg .
          cp dist/github-contribution-grid-snake.gif .
          git add .
          git commit -m "Update 2024 snake animation - $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin output
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}